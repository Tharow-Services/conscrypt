package org.conscrypt;

import static org.junit.Assert.assertNull;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.JUnit4;

@RunWith(JUnit4.class)
public class AbstractSessionContextTest {
    private final byte[][] INVALID_SESSIONS = new byte[][] {
            new byte[0],
            new byte[] {
                    0x00, 0x00,
            },
            new byte[] {
                    0x00, 0x00, 0x00, 0x01,
            },
            new byte[] {
                    0x00, 0x00, 0x00, 0x01, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF,
            },
            new byte[] {
                    0x00, 0x00, 0x00, 0x01, (byte) 0x7F, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF,
            },
            new byte[] {
                    0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
            },
            new byte[] {
                    0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
            },
            new byte[] {
                    0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x33, 0x7F, 0x7F, 0x7F, 0x7F,
            },
            new byte[] {
                    0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x33, 0x00, 0x00, 0x00, 0x01,
            },
            new byte[] {
                    0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x33, 0x00, 0x00, 0x00, 0x01,
                    0x7F, 0x7F, 0x33, 0x33, 0x44,
            },
            new byte[] {
                    0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x33, 0x00, 0x00, 0x00, 0x01,
                    0x00, 0x00, 0x00, 0x01, 0x44, 0x55,
            },
            new byte[] {
                    0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x33, 0x00, 0x00, 0x00, 0x01,
                    0x00, 0x00, 0x00, 0x01, 0x44, 0x7F, 0x33, 0x77, 0x77,
            },
            new byte[] {
                    0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x33, 0x00, 0x00, 0x00, 0x01,
                    0x00, 0x00, 0x00, 0x01, 0x44, 0x00, 0x00, 0x00, 0x01, 0x66, 0x77,
            },
            new byte[] {
                    0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x33, 0x00, 0x00, 0x00, 0x01,
                    0x00, 0x00, 0x00, 0x01, 0x44, 0x00, 0x00, 0x00, 0x01, 0x66, 0x77,
            },
    };

    @Test
    public void toSession_corruptSession_Failure() throws Exception {
        ClientSessionContext ctx = new ClientSessionContext();
        for (int i = 0; i < INVALID_SESSIONS.length; i++) {
            try {
                assertNull("Should not validate for session " + i,
                        ctx.toSession(INVALID_SESSIONS[i], "localhost", 8080));
            } catch (Exception e) {
                throw new AssertionError("Failure validation session " + i, e);
            }
        }
    }
}
