// Signature format: 2.0
package android.net.ssl {

  @FlaggedApi("com.android.org.conscrypt.flags.spake2plus_api") public final class PakeClientKeyManagerParameters implements javax.net.ssl.ManagerFactoryParameters {
    method @Nullable public byte[] getClientId();
    method @NonNull public java.util.List<android.net.ssl.PakeOption> getOptions();
    method @Nullable public byte[] getServerId();
  }

  @FlaggedApi("com.android.org.conscrypt.flags.spake2plus_api") public static final class PakeClientKeyManagerParameters.Builder {
    ctor public PakeClientKeyManagerParameters.Builder();
    method @NonNull public android.net.ssl.PakeClientKeyManagerParameters.Builder addOption(@NonNull android.net.ssl.PakeOption);
    method @NonNull public android.net.ssl.PakeClientKeyManagerParameters build();
    method @NonNull public android.net.ssl.PakeClientKeyManagerParameters.Builder setEndpoints(@NonNull android.net.ssl.PakeEndpoints);
  }

  @FlaggedApi("com.android.org.conscrypt.flags.spake2plus_api") public final class PakeEndpoints {
    ctor public PakeEndpoints(@Nullable byte[], @Nullable byte[]);
    method @Nullable public byte[] getIdClient();
    method @Nullable public byte[] getIdServer();
    field public static final android.net.ssl.PakeEndpoints DIRECT;
  }

  @FlaggedApi("com.android.org.conscrypt.flags.spake2plus_api") public final class PakeOption {
    method @Nullable public byte[] getMessageComponent(@NonNull String);
    method @NonNull public String getName();
  }

  @FlaggedApi("com.android.org.conscrypt.flags.spake2plus_api") public static final class PakeOption.Builder {
    ctor public PakeOption.Builder(@NonNull String);
    method @NonNull public android.net.ssl.PakeOption.Builder addMessageComponent(@NonNull String, @Nullable byte[]);
    method @NonNull public android.net.ssl.PakeOption build();
  }

  @FlaggedApi("com.android.org.conscrypt.flags.spake2plus_api") public final class PakeServerKeyManagerParameters implements javax.net.ssl.ManagerFactoryParameters {
    method @NonNull public java.util.Set<android.net.ssl.PakeEndpoints> getEndpoints();
    method @NonNull public java.util.List<android.net.ssl.PakeOption> getOptions(@NonNull android.net.ssl.PakeEndpoints);
    method public boolean hasEndpoint(@NonNull android.net.ssl.PakeEndpoints);
  }

  @FlaggedApi("com.android.org.conscrypt.flags.spake2plus_api") public static final class PakeServerKeyManagerParameters.Builder {
    ctor public PakeServerKeyManagerParameters.Builder();
    method @NonNull public android.net.ssl.PakeServerKeyManagerParameters.Builder addEndpoint(@NonNull android.net.ssl.PakeEndpoints);
    method @NonNull public android.net.ssl.PakeServerKeyManagerParameters.Builder addOption(@NonNull android.net.ssl.PakeEndpoints, @NonNull android.net.ssl.PakeOption);
    method @NonNull public android.net.ssl.PakeServerKeyManagerParameters build();
  }

}

