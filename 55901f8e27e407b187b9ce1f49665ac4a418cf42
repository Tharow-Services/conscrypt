{
  "comments": [
    {
      "key": {
        "uuid": "f0c4cb62_9c5f6d9f",
        "filename": "src/compat/java/org/conscrypt/Platform.java",
        "patchSetId": 1
      },
      "lineNbr": 158,
      "author": {
        "id": 1018773
      },
      "writtenOn": "2014-09-15T16:21:32Z",
      "side": 1,
      "message": "Please provide more justification for this change. Is it improving the existing status quo (i.e., part of the duck-typing-for-unbundling effort), or is this a new feature?\n\nIf it\u0027s a new feature, I presume this variant of checkServerTrusted adds value over its more standard version. However, users of Conscrypt are free to provide their own implementation of X509TrustManager. It feels like they will miss on whatever this new variant of checkServerTrusted offers. What exactly will they be missing out on? Is that acceptable?",
      "revId": "55901f8e27e407b187b9ce1f49665ac4a418cf42",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f0c4cb62_5cf95527",
        "filename": "src/compat/java/org/conscrypt/Platform.java",
        "patchSetId": 1
      },
      "lineNbr": 158,
      "author": {
        "id": 1002975
      },
      "writtenOn": "2014-11-11T00:04:56Z",
      "side": 1,
      "message": "No, it\u0027s exactly what this comment says. This is for the unbundled version where it can\u0027t call this method variant on TrustManagerImpl directly since it\u0027s not public.",
      "parentUuid": "f0c4cb62_9c5f6d9f",
      "revId": "55901f8e27e407b187b9ce1f49665ac4a418cf42",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "709e1b6e_899f2454",
        "filename": "src/compat/java/org/conscrypt/Platform.java",
        "patchSetId": 1
      },
      "lineNbr": 164,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-09-15T05:59:45Z",
      "side": 1,
      "message": "do the method lookup once and cache it.",
      "range": {
        "startLine": 163,
        "startChar": 0,
        "endLine": 164,
        "endChar": 73
      },
      "revId": "55901f8e27e407b187b9ce1f49665ac4a418cf42",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "709e1b6e_c457538a",
        "filename": "src/compat/java/org/conscrypt/Platform.java",
        "patchSetId": 1
      },
      "lineNbr": 164,
      "author": {
        "id": 1002975
      },
      "writtenOn": "2014-09-15T16:15:50Z",
      "side": 1,
      "message": "How about a single item cache that doesn\u0027t change when the Class is the same?",
      "parentUuid": "709e1b6e_899f2454",
      "range": {
        "startLine": 163,
        "startChar": 0,
        "endLine": 164,
        "endChar": 73
      },
      "revId": "55901f8e27e407b187b9ce1f49665ac4a418cf42",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "70437c81_d2df5490",
        "filename": "src/compat/java/org/conscrypt/Platform.java",
        "patchSetId": 1
      },
      "lineNbr": 164,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-10-02T07:05:04Z",
      "side": 1,
      "message": "sorry, I didn\u0027t even really mean a cache. I just meant a static field.",
      "parentUuid": "709e1b6e_c457538a",
      "range": {
        "startLine": 163,
        "startChar": 0,
        "endLine": 164,
        "endChar": 73
      },
      "revId": "55901f8e27e407b187b9ce1f49665ac4a418cf42",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a4f777e_3ad7c552",
        "filename": "src/compat/java/org/conscrypt/Platform.java",
        "patchSetId": 1
      },
      "lineNbr": 164,
      "author": {
        "id": 1002975
      },
      "writtenOn": "2014-11-11T00:04:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "70437c81_d2df5490",
      "range": {
        "startLine": 163,
        "startChar": 0,
        "endLine": 164,
        "endChar": 73
      },
      "revId": "55901f8e27e407b187b9ce1f49665ac4a418cf42",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "709e1b6e_a4c88f35",
        "filename": "src/compat/java/org/conscrypt/Platform.java",
        "patchSetId": 1
      },
      "lineNbr": 167,
      "author": {
        "id": 1018773
      },
      "writtenOn": "2014-09-15T16:21:32Z",
      "side": 1,
      "message": "Nit: Consider using multi-catch syntax.",
      "revId": "55901f8e27e407b187b9ce1f49665ac4a418cf42",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b0933369_f7b24be4",
        "filename": "src/compat/java/org/conscrypt/Platform.java",
        "patchSetId": 1
      },
      "lineNbr": 167,
      "author": {
        "id": 1002975
      },
      "writtenOn": "2014-11-11T00:04:56Z",
      "side": 1,
      "message": "I\u0027ll look into this after I make sure it won\u0027t break unbundled builds.",
      "parentUuid": "709e1b6e_a4c88f35",
      "revId": "55901f8e27e407b187b9ce1f49665ac4a418cf42",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b0933369_174c3754",
        "filename": "src/compat/java/org/conscrypt/Platform.java",
        "patchSetId": 1
      },
      "lineNbr": 170,
      "author": {
        "id": 1018773
      },
      "writtenOn": "2014-09-15T16:21:32Z",
      "side": 1,
      "message": "I think you shouldn\u0027t ignore this exception. It means that the method was invoked, but it threw an exception. Falling back to another variant of this method is probably wrong in this scenario.",
      "revId": "55901f8e27e407b187b9ce1f49665ac4a418cf42",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d05d0861_592c03c0",
        "filename": "src/compat/java/org/conscrypt/Platform.java",
        "patchSetId": 1
      },
      "lineNbr": 170,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-10-02T07:05:04Z",
      "side": 1,
      "message": "agreed. you should use getTargetException and rethrow based on instanceof. otherwise you\u0027ll never get the failure exception.",
      "parentUuid": "b0933369_174c3754",
      "revId": "55901f8e27e407b187b9ce1f49665ac4a418cf42",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a4f777e_baea9509",
        "filename": "src/compat/java/org/conscrypt/Platform.java",
        "patchSetId": 1
      },
      "lineNbr": 170,
      "author": {
        "id": 1002975
      },
      "writtenOn": "2014-11-11T00:04:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d05d0861_592c03c0",
      "revId": "55901f8e27e407b187b9ce1f49665ac4a418cf42",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f0c4cb62_79e8e3c5",
        "filename": "src/platform/java/org/conscrypt/Platform.java",
        "patchSetId": 1
      },
      "lineNbr": 123,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-09-15T05:59:45Z",
      "side": 1,
      "message": "same here",
      "range": {
        "startLine": 122,
        "startChar": 1,
        "endLine": 123,
        "endChar": 77
      },
      "revId": "55901f8e27e407b187b9ce1f49665ac4a418cf42",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}