{
  "comments": [
    {
      "key": {
        "uuid": "06a21cbf_20994ac6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1038039
      },
      "writtenOn": "2015-03-18T17:12:52Z",
      "side": 1,
      "message": "object -\u003e reference",
      "range": {
        "startLine": 9,
        "startChar": 11,
        "endLine": 9,
        "endChar": 17
      },
      "revId": "6414861e911a6a9b92a0b1d0a75524ef9c4fb122",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "269ba08e_01d1aa83",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1014443
      },
      "writtenOn": "2015-03-18T17:13:23Z",
      "side": 1,
      "message": "which tests ?",
      "range": {
        "startLine": 9,
        "startChar": 27,
        "endLine": 9,
        "endChar": 37
      },
      "revId": "6414861e911a6a9b92a0b1d0a75524ef9c4fb122",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "666bd831_03a7ae0b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1038039
      },
      "writtenOn": "2015-03-18T17:12:52Z",
      "side": 1,
      "message": "suit -\u003e suite",
      "range": {
        "startLine": 11,
        "startChar": 44,
        "endLine": 11,
        "endChar": 48
      },
      "revId": "6414861e911a6a9b92a0b1d0a75524ef9c4fb122",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "269ba08e_613bd64d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1038039
      },
      "writtenOn": "2015-03-18T17:12:52Z",
      "side": 1,
      "message": "Bug ID?",
      "revId": "6414861e911a6a9b92a0b1d0a75524ef9c4fb122",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "666bd831_23acaaed",
        "filename": "src/test/java/org/conscrypt/NativeCryptoTest.java",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1014443
      },
      "writtenOn": "2015-03-18T17:13:23Z",
      "side": 1,
      "message": "wouldn\u0027t it be easier to just use the null literal instead of NULL_EVP_PKEY and NULL_EVP_CIPHER_CTX everywhere ?",
      "revId": "6414861e911a6a9b92a0b1d0a75524ef9c4fb122",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "06a21cbf_e0600233",
        "filename": "src/test/java/org/conscrypt/NativeCryptoTest.java",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1038039
      },
      "writtenOn": "2015-03-18T17:16:02Z",
      "side": 1,
      "message": "This change seems to be changing the purpose of the tests that use these constants.\n\nIs this change in keeping with the original intent of the tests?\n\nI don\u0027t know what NativeRef.EVP_PKEY(0) is actually simulating and whether it\u0027s an expected case we should be testing. Perhaps kroot@ can answer.",
      "range": {
        "startLine": 70,
        "startChar": 44,
        "endLine": 70,
        "endChar": 57
      },
      "revId": "6414861e911a6a9b92a0b1d0a75524ef9c4fb122",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "269ba08e_61c2b6b3",
        "filename": "src/test/java/org/conscrypt/NativeCryptoTest.java",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1014443
      },
      "writtenOn": "2015-03-18T17:18:11Z",
      "side": 1,
      "message": "it\u0027s not equivalent to the earlier test, but it\u0027s the only thing left to test (now that we accept objects instead of longs)",
      "parentUuid": "06a21cbf_e0600233",
      "range": {
        "startLine": 70,
        "startChar": 44,
        "endLine": 70,
        "endChar": 57
      },
      "revId": "6414861e911a6a9b92a0b1d0a75524ef9c4fb122",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "269ba08e_01a76a0b",
        "filename": "src/test/java/org/conscrypt/NativeCryptoTest.java",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1038039
      },
      "writtenOn": "2015-03-18T17:27:32Z",
      "side": 1,
      "message": "So commit I5925da40cb37cd328b3a126404944f771732a43e broke this and it has been broken since?\n\nFair enough if we don\u0027t need to test what happens when we have a bad reference.\n\nFWIW, this is the first time I\u0027m seeing this code. Is the address given to EVP_PKEY actually the address of the context, or just an arbitrary address?\n\nSuggestions for making NativeRef slightly clearer:\n\n1) NativeRef.context should perhaps be renamed to NativeRef.address, if it deals with general addresses, not specifically contexts.\n2) NativeRef.equals() should possibly take into account the concrete subclass.\n3) A better hashcode impl might be (int) (value ^ (value \u003e\u003e\u003e 32)) (e.g. the same as Long) and could take into account class as well (although it\u0027s probably not worth the effort, depending on usage)",
      "parentUuid": "269ba08e_61c2b6b3",
      "range": {
        "startLine": 70,
        "startChar": 44,
        "endLine": 70,
        "endChar": 57
      },
      "revId": "6414861e911a6a9b92a0b1d0a75524ef9c4fb122",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "269ba08e_2135ce54",
        "filename": "src/test/java/org/conscrypt/NativeRefTest.java",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1014443
      },
      "writtenOn": "2015-03-18T17:13:23Z",
      "side": 1,
      "message": "NullPointerException expected",
      "revId": "6414861e911a6a9b92a0b1d0a75524ef9c4fb122",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}