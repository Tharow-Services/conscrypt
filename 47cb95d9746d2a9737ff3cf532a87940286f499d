{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "5cf54b6a_18e51ad9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1863710
      },
      "writtenOn": "2024-12-24T15:44:04Z",
      "side": 1,
      "message": "Bypassing lint as tests have been added for the new API.",
      "revId": "47cb95d9746d2a9737ff3cf532a87940286f499d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e46ed196_52ec830a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1893966
      },
      "writtenOn": "2024-12-30T15:56:29Z",
      "side": 1,
      "message": "One more thing, what shall we use for the context byte array? Are we not going to allow that to be passed in?",
      "revId": "47cb95d9746d2a9737ff3cf532a87940286f499d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e43318b2_a5f797f1",
        "filename": "publicapi/src/main/java/android/net/ssl/PakeClientKeyManagerParameters.java",
        "patchSetId": 1
      },
      "lineNbr": 78,
      "author": {
        "id": 1893966
      },
      "writtenOn": "2024-12-30T16:06:16Z",
      "side": 1,
      "message": "I think we should be consistent with the namings of these methods across classes, so both of them should be getClientId or getIdClient. Same for servers",
      "range": {
        "startLine": 78,
        "startChar": 28,
        "endLine": 78,
        "endChar": 39
      },
      "revId": "47cb95d9746d2a9737ff3cf532a87940286f499d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "000a4fc3_67467183",
        "filename": "publicapi/src/main/java/android/net/ssl/PakeOption.java",
        "patchSetId": 1
      },
      "lineNbr": 144,
      "author": {
        "id": 1893966
      },
      "writtenOn": "2024-12-30T09:52:22Z",
      "side": 1,
      "message": "We should do some size checking too.",
      "range": {
        "startLine": 143,
        "startChar": 18,
        "endLine": 144,
        "endChar": 57
      },
      "revId": "47cb95d9746d2a9737ff3cf532a87940286f499d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c4cc752f_7f4a1717",
        "filename": "publicapi/src/main/java/android/net/ssl/PakeOption.java",
        "patchSetId": 1
      },
      "lineNbr": 144,
      "author": {
        "id": 1863710
      },
      "writtenOn": "2024-12-30T12:42:40Z",
      "side": 1,
      "message": "I\u0027m not sure what that should be, I don\u0027t find it documented anywhere, though I see in some internals 32-byte arrays bewing used for w0 and w1 and 65 for L. If the size is something that is fixed, I can add the checks.",
      "parentUuid": "000a4fc3_67467183",
      "range": {
        "startLine": 143,
        "startChar": 18,
        "endLine": 144,
        "endChar": 57
      },
      "revId": "47cb95d9746d2a9737ff3cf532a87940286f499d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "051da1cb_5c76f48a",
        "filename": "publicapi/src/main/java/android/net/ssl/PakeOption.java",
        "patchSetId": 1
      },
      "lineNbr": 144,
      "author": {
        "id": 1893966
      },
      "writtenOn": "2024-12-30T15:09:54Z",
      "side": 1,
      "message": "Yeah, w0 and w1 should be 32 and the registration size is 65 and these are all fixed.",
      "parentUuid": "c4cc752f_7f4a1717",
      "range": {
        "startLine": 143,
        "startChar": 18,
        "endLine": 144,
        "endChar": 57
      },
      "revId": "47cb95d9746d2a9737ff3cf532a87940286f499d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d1ca6255_a2b5dbb1",
        "filename": "publicapi/src/main/java/android/net/ssl/PakeOption.java",
        "patchSetId": 1
      },
      "lineNbr": 157,
      "author": {
        "id": 1893966
      },
      "writtenOn": "2024-12-30T15:22:14Z",
      "side": 1,
      "message": "This should be w0",
      "range": {
        "startLine": 157,
        "startChar": 51,
        "endLine": 157,
        "endChar": 53
      },
      "fixSuggestions": [
        {
          "fixId": "d5f295e8_0c823381",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "publicapi/src/main/java/android/net/ssl/PakeOption.java",
              "range": {
                "startLine": 157,
                "startChar": 0,
                "endLine": 158,
                "endChar": 0
              },
              "replacement": "                if (messageComponents.containsKey(\"w0\")\n"
            }
          ]
        }
      ],
      "revId": "47cb95d9746d2a9737ff3cf532a87940286f499d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c5719e1b_3bb3165e",
        "filename": "publicapi/src/main/java/android/net/ssl/PakeOption.java",
        "patchSetId": 1
      },
      "lineNbr": 157,
      "author": {
        "id": 1863710
      },
      "writtenOn": "2025-01-02T10:34:59Z",
      "side": 1,
      "message": "`w1` is correct. We already have `w0` and need to validate that only one of `w1` and `registration_record` is defined. Having said that, I should add some extra validation in the client and server side to check that `w0` and `w1` is used for client and `w0` and `registration_record` for server.",
      "parentUuid": "d1ca6255_a2b5dbb1",
      "range": {
        "startLine": 157,
        "startChar": 51,
        "endLine": 157,
        "endChar": 53
      },
      "revId": "47cb95d9746d2a9737ff3cf532a87940286f499d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "79d39ca0_74728a65",
        "filename": "publicapi/src/main/java/android/net/ssl/PakeOption.java",
        "patchSetId": 1
      },
      "lineNbr": 157,
      "author": {
        "id": 1893966
      },
      "writtenOn": "2025-01-02T10:43:30Z",
      "side": 1,
      "message": "Oh yeah, sorry I misread that bit of code.",
      "parentUuid": "c5719e1b_3bb3165e",
      "range": {
        "startLine": 157,
        "startChar": 51,
        "endLine": 157,
        "endChar": 53
      },
      "revId": "47cb95d9746d2a9737ff3cf532a87940286f499d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "88bc6641_da00fdea",
        "filename": "publicapi/src/main/java/android/net/ssl/PakeOption.java",
        "patchSetId": 1
      },
      "lineNbr": 166,
      "author": {
        "id": 1893966
      },
      "writtenOn": "2024-12-30T09:52:22Z",
      "side": 1,
      "message": "Should the password_verifier be an option too?",
      "range": {
        "startLine": 164,
        "startChar": 24,
        "endLine": 166,
        "endChar": 0
      },
      "revId": "47cb95d9746d2a9737ff3cf532a87940286f499d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dcd8f996_8c57f994",
        "filename": "publicapi/src/main/java/android/net/ssl/PakeOption.java",
        "patchSetId": 1
      },
      "lineNbr": 166,
      "author": {
        "id": 1863710
      },
      "writtenOn": "2024-12-30T12:42:40Z",
      "side": 1,
      "message": "What do you mean by password_verifier?",
      "parentUuid": "88bc6641_da00fdea",
      "range": {
        "startLine": 164,
        "startChar": 24,
        "endLine": 166,
        "endChar": 0
      },
      "revId": "47cb95d9746d2a9737ff3cf532a87940286f499d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4bd9cdcf_2dec4913",
        "filename": "publicapi/src/main/java/android/net/ssl/PakeOption.java",
        "patchSetId": 1
      },
      "lineNbr": 166,
      "author": {
        "id": 1893966
      },
      "writtenOn": "2024-12-30T15:09:54Z",
      "side": 1,
      "message": "It\u0027s w0 and w1 put together into a single byte array. It is the parameter for the SSL_CREDENTIAL_set1_PAKE_client_password_record function exposed by boring ssl.",
      "parentUuid": "dcd8f996_8c57f994",
      "range": {
        "startLine": 164,
        "startChar": 24,
        "endLine": 166,
        "endChar": 0
      },
      "revId": "47cb95d9746d2a9737ff3cf532a87940286f499d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "33c5ebfa_9466d805",
        "filename": "publicapi/src/main/java/android/net/ssl/PakeOption.java",
        "patchSetId": 1
      },
      "lineNbr": 166,
      "author": {
        "id": 1893966
      },
      "writtenOn": "2024-12-30T15:22:14Z",
      "side": 1,
      "message": "Actually, upon further reflection. It might be good to split this into validateSpake2PlusClientComponents and validateSpake2PlusServerComponents, and in that way ensure that the client gets the w0 and w1 (or password verifier), and that the server gets the w0 and registration record.",
      "parentUuid": "4bd9cdcf_2dec4913",
      "range": {
        "startLine": 164,
        "startChar": 24,
        "endLine": 166,
        "endChar": 0
      },
      "revId": "47cb95d9746d2a9737ff3cf532a87940286f499d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2692629c_743f7578",
        "filename": "publicapi/src/main/java/android/net/ssl/PakeOption.java",
        "patchSetId": 1
      },
      "lineNbr": 166,
      "author": {
        "id": 1863710
      },
      "writtenOn": "2025-01-02T10:34:59Z",
      "side": 1,
      "message": "I\u0027ll do that in the client and server classes.",
      "parentUuid": "33c5ebfa_9466d805",
      "range": {
        "startLine": 164,
        "startChar": 24,
        "endLine": 166,
        "endChar": 0
      },
      "revId": "47cb95d9746d2a9737ff3cf532a87940286f499d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bc6f05de_b2d85641",
        "filename": "publicapi/src/main/java/android/net/ssl/PakeServerKeyManagerParameters.java",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 1893966
      },
      "writtenOn": "2024-12-30T15:13:46Z",
      "side": 1,
      "message": "I think I need a getEndpoints method too. I need to be able to know the complete set of endpoints passed so that I can create the set of KeyManagers with the corresponding set of options.",
      "range": {
        "startLine": 51,
        "startChar": 19,
        "endLine": 51,
        "endChar": 49
      },
      "fixSuggestions": [
        {
          "fixId": "52322095_0dde63ca",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "publicapi/src/main/java/android/net/ssl/PakeServerKeyManagerParameters.java",
              "range": {
                "startLine": 31,
                "startChar": 0,
                "endLine": 31,
                "endChar": 0
              },
              "replacement": "import java.util.HashSet;\n"
            },
            {
              "path": "publicapi/src/main/java/android/net/ssl/PakeServerKeyManagerParameters.java",
              "range": {
                "startLine": 33,
                "startChar": 0,
                "endLine": 33,
                "endChar": 0
              },
              "replacement": "import java.util.Set;\n"
            },
            {
              "path": "publicapi/src/main/java/android/net/ssl/PakeServerKeyManagerParameters.java",
              "range": {
                "startLine": 91,
                "startChar": 0,
                "endLine": 91,
                "endChar": 0
              },
              "replacement": "\n    /**\n     * Returns an unmodifiable set of endpoints.\n     *\n     * @return An unmodifiable set of endpoints.\n     */\n    public @NonNull Set\u003cPakeEndpoints\u003e getEndpoints() {\n        return Collections.unmodifiableSet(new HashSet\u003c\u003e(endpoints.keySet()));\n    }\n"
            }
          ]
        }
      ],
      "revId": "47cb95d9746d2a9737ff3cf532a87940286f499d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}