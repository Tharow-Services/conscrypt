{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "24017352_671375e1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 8,
      "author": {
        "id": 1863710
      },
      "writtenOn": "2025-01-02T14:16:43Z",
      "side": 1,
      "message": "Please add bug number and test info",
      "revId": "5a3b31321d8cb0b9fcd63ca084d53e82a3ec0178",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "08e55dc1_5fc63854",
        "filename": "repackaged/common/src/main/java/com/android/org/conscrypt/NativeCrypto.java",
        "patchSetId": 4
      },
      "lineNbr": 1115,
      "author": {
        "id": 1863710
      },
      "writtenOn": "2025-01-02T14:16:43Z",
      "side": 1,
      "message": "I think something is wrong with having `get*Protocols` being called before `setTlsV1DeprecationStatus` is executed and we should look at what can be done to make this flow better.\n\nIs there any danger of concurrent calls to `setTlsV1DeprecationStatus`? Also, once it that is called, does it make sense to disallow further calls to it?\n\nI don\u0027t know how it is used, so maybe we can\u0027t do something to improve on it. But if we can, I think it\u0027s good to rework it. And maybe even rename the function, because `setTlsV1DeprecationStatus` seems to be more of an init function. Maybe better to call it something like `initTlsProtocols(boolean isTlsv1Deprecated, boolean isTlsv1Supported)`. Or even split into `initDefaultProtocols(boolean isTlsv1Deprecated)` and `initSupportedProtocols(boolean isTlsv1Supported)`.",
      "revId": "5a3b31321d8cb0b9fcd63ca084d53e82a3ec0178",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e6445444_83c6d136",
        "filename": "repackaged/common/src/main/java/com/android/org/conscrypt/NativeCrypto.java",
        "patchSetId": 4
      },
      "lineNbr": 1115,
      "author": {
        "id": 1863710
      },
      "writtenOn": "2025-01-02T14:17:42Z",
      "side": 1,
      "message": "Actually, could the initialization be done in `\u003cclinit\u003e`?",
      "parentUuid": "08e55dc1_5fc63854",
      "revId": "5a3b31321d8cb0b9fcd63ca084d53e82a3ec0178",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e258f01c_036b6b4d",
        "filename": "repackaged/common/src/main/java/com/android/org/conscrypt/NativeCrypto.java",
        "patchSetId": 4
      },
      "lineNbr": 1115,
      "author": {
        "id": 1334152
      },
      "writtenOn": "2025-01-08T12:43:08Z",
      "side": 1,
      "message": "Making these flaggable has exposed something of a conflict.  The flags are read and used in Conscrypt.newProviderBuilder() when creating a Conscrypt `Provider` instance but the actual values are static. So if an app (or more likely a test!) creates two instances then \"last one wins\".\n\nThat\u0027s somewhat orthogonal to this issue, which turned out there were some Conscrypt static methods that can get called before any instance is created.\n\nSo agree, I think these arrays should be initialised in \u003cclinit\u003e to the \"default default\" values in the various Platform.java files, and then potentially re-initialised whenever an instance is created.\n\nAlso agree the names could use some love but I didn\u0027t want to block earlier reviews.",
      "parentUuid": "e6445444_83c6d136",
      "revId": "5a3b31321d8cb0b9fcd63ca084d53e82a3ec0178",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}