/* Copyright (C) 2015 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License. */

#include <stdio.h>
#include <stdlib.h>
#include "ct_known_logs_static.h"

static const char kCopyright[] =
    "/* Copyright (C) 2015 The Android Open Source Project\n"
    " *\n"
    " * Licensed under the Apache License, Version 2.0 (the \"License\");\n"
    " * you may not use this file except in compliance with the License.\n"
    " * You may obtain a copy of the License at\n"
    " *\n"
    " *      http://www.apache.org/licenses/LICENSE-2.0\n"
    " *\n"
    " * Unless required by applicable law or agreed to in writing, software\n"
    " * distributed under the License is distributed on an \"AS IS\" BASIS,\n"
    " * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or "
    "implied.\n"
    " * See the License for the specific language governing permissions and\n"
    " * limitations under the License. */\n\n";

static const char kClassHeader[] =
    "/* This file was generated by generate_known_logs.cc. */\n\n"
    "package org.conscrypt.ct;\n\n"
    "import org.conscrypt.NativeCrypto;\n"
    "import org.conscrypt.OpenSSLKey;\n\n"
    "public final class KnownLogs {\n"
    "    private static final class Lazy {\n"
    "        private static final CTLogInfo[] KNOWN_LOGS;\n"
    "        static {\n"
    "            try {\n"
    "                KNOWN_LOGS = new CTLogInfo[] {\n";

static const char kClassFooter[] =
    "                };\n"
    "            } catch (Exception e) {\n"
    "                throw new RuntimeException(e);\n"
    "            }\n"
    "        }\n"
    "    }\n"
    "\n"
    "    public static final CTLogInfo[] getKnownLogs() {\n"
    "        return Lazy.KNOWN_LOGS;\n"
    "    }\n"
    "}\n";

#define INDENT5 "                    "
#define INDENT6 "                        "
#define INDENT7 "                            "

int main(int /* argc */, char ** /* argv */) {
    printf("%s", kCopyright);
    printf("%s", kClassHeader);

    for (size_t i = 0; i < kNumKnownCTLogs; i++) {
        const CTLogInfo *log = &kCTLogList[i];
        printf(INDENT5 "new CTLogInfo(\n");
        printf(INDENT6 "new OpenSSLKey(NativeCrypto.d2i_PUBKEY(new byte[] {\n");

        unsigned int cols = printf(INDENT7);
        for (size_t j = 0; j < log->log_key_length; j++) {
            if (cols > 95) {
                printf("\n");
                cols = printf(INDENT7);
            }
            cols += printf("%d, ", (int8_t)log->log_key[j]);
        }
        printf("\n");

        printf(INDENT6 "})).getPublicKey(),\n");
        printf(INDENT6 "\"%s\",\n", log->log_name);
        printf(INDENT6 "\"%s\"\n", log->log_url);
        printf(INDENT5 "),\n");
    }

    printf("%s", kClassFooter);
}

